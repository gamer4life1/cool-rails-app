image: ruby:2.6.1

include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
  - template: DAST.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml

variables:
  DAST_WEBSITE: https://cool-rails-app.herokuapp.com

stages:
   - test
   - analyze
   - deploy
   - dast

cache:
  paths:
  - vendor/ruby


brakeman:
  type: analyze
  script:
    - gem install brakeman
    - gem update --system
    - gem install bundler
    - bundle --without production
    - brakeman -o brakeman.html
  artifacts:
    paths:
    - brakeman.html
    expire_in: 1 week

fasterer:
  type: analyze
  script:
    - gem install fasterer
    - gem update --system
    - gem install bundler
    - bundle --without production
    - fasterer

rubyc:
  type: analyze
  script:
    - gem update --system
    - gem install bundler
    - bundle --without production
    - bundle exec rubycritic
  artifacts:
    paths:
    - ./tmp/rubycritic/overview.html
    expire_in: 1 week



#rubocop:
#  type: codequality
#  script:
#  - gem install rubocop
#  - gem update --system
#  - gem install bundler
#  - bundle install --without production
#  - bundle exec rubocop -a


install-test:
  type: test
  script:
  
  #- ruby -v # Print out ruby version for debugging  
  # Uncomment next line if your rails app needs a JS runtime: 
  - apt-get update -q && apt-get install nodejs -yqq  
  - apt-get install libpq-dev -yqq  
  - gem update --system 
  - gem install bundler 
  - gem install rails 
  - rm -rf Gemfile.lock 
  - bundle update 
  - bundle install --without production -j $(nproc) --path vendor  # Install dependencies into ./vendor/ruby
  - rails db:migrate RAILS_ENV=test
  - rails t 


deploy: 
  type: deploy  
  environment: production 
  script: 
  
  #- ruby -v # Print out ruby version for debugging  
  # Uncomment next line if your rails app needs a JS runtime: 
  - apt-get update -q && apt-get install nodejs -yqq  
  - apt-get install libpq-dev -yqq  
  - gem update --system 
  - gem install bundler
  - gem install dpl 
  - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_PRODUCTION_KEY
